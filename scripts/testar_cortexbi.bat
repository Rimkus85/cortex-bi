@echo off
REM ========================================
REM C√ìRTEX BI - Teste Completo do Sistema
REM ========================================

echo üß™ C√ìRTEX BI - Teste Completo do Sistema
echo ==========================================

setlocal enabledelayedexpansion

echo [TESTE 1] Verificando se servidor est√° rodando...
netstat -an | find ":5000" | find "LISTENING" >nul
if %errorLevel% equ 0 (
    echo ‚úÖ Servidor rodando na porta 5000
) else (
    echo ‚ùå Servidor N√ÉO est√° rodando
    echo üí° Iniciando servidor...
    start /B python main_ai.py
    echo ‚è≥ Aguardando 10 segundos...
    timeout /t 10 /nobreak >nul
)

echo.
echo [TESTE 2] Descobrindo IP real da m√°quina...
for /f "tokens=2 delims=:" %%a in ('ipconfig ^| findstr /C:"IPv4" ^| findstr /V "127.0.0.1"') do (
    set REAL_IP=%%a
    set REAL_IP=!REAL_IP: =!
    echo üìç IP encontrado: !REAL_IP!
    goto :found_ip
)
:found_ip

echo.
echo [TESTE 3] Testando conectividade...

echo üß™ Teste 1: localhost:5000
curl -s http://localhost:5000/health 2>nul
if %errorLevel% equ 0 (
    echo ‚úÖ localhost:5000 - OK
    set LOCAL_OK=1
) else (
    echo ‚ùå localhost:5000 - FALHOU
    set LOCAL_OK=0
)

echo üß™ Teste 2: %REAL_IP%:5000
curl -s http://%REAL_IP%:5000/health 2>nul
if %errorLevel% equ 0 (
    echo ‚úÖ %REAL_IP%:5000 - OK
    set IP_OK=1
) else (
    echo ‚ùå %REAL_IP%:5000 - FALHOU
    set IP_OK=0
)

echo üß™ Teste 3: 10.124.100.57:5000
curl -s http://10.124.100.57:5000/health 2>nul
if %errorLevel% equ 0 (
    echo ‚úÖ 10.124.100.57:5000 - OK
    set CONFIG_IP_OK=1
) else (
    echo ‚ùå 10.124.100.57:5000 - FALHOU
    set CONFIG_IP_OK=0
)

echo.
echo [TESTE 4] Testando endpoints principais...

if %LOCAL_OK%==1 (
    set BASE_URL=http://localhost:5000
) else if %IP_OK%==1 (
    set BASE_URL=http://%REAL_IP%:5000
) else (
    set BASE_URL=http://10.124.100.57:5000
)

echo üìç Usando URL base: %BASE_URL%

echo üß™ Testando /health...
curl -s %BASE_URL%/health | find "healthy" >nul
if %errorLevel% equ 0 (
    echo ‚úÖ Health check - OK
) else (
    echo ‚ùå Health check - FALHOU
)

echo üß™ Testando /docs...
curl -s -I %BASE_URL%/docs | find "200" >nul
if %errorLevel% equ 0 (
    echo ‚úÖ Documenta√ß√£o - OK
) else (
    echo ‚ùå Documenta√ß√£o - FALHOU
)

echo üß™ Testando /list-files...
curl -s %BASE_URL%/list-files | find "files" >nul
if %errorLevel% equ 0 (
    echo ‚úÖ List files - OK
) else (
    echo ‚ùå List files - FALHOU
)

echo.
echo [TESTE 5] Verificando logs de erro...
if exist "logs\cortexbi.log" (
    echo üìã √öltimas linhas do log:
    powershell -command "Get-Content logs\cortexbi.log -Tail 3"
) else (
    echo ‚ö†Ô∏è  Log n√£o encontrado
)

echo.
echo ==========================================
echo üìä RESULTADO DOS TESTES
echo ==========================================

if %LOCAL_OK%==1 (
    echo ‚úÖ SUCESSO: Sistema funcionando localmente
    echo üåê Acesse: http://localhost:5000/docs
) else (
    echo ‚ùå PROBLEMA: Sistema n√£o responde localmente
)

if %IP_OK%==1 (
    echo ‚úÖ SUCESSO: Sistema acess√≠vel pela rede
    echo üåê Acesse: http://%REAL_IP%:5000/docs
) else (
    echo ‚ùå PROBLEMA: Sistema n√£o acess√≠vel pela rede
    echo üí° Verificar firewall e configura√ß√£o de rede
)

echo.
echo üéØ LINKS PARA USAR:
echo ==========================================
if %LOCAL_OK%==1 (
    echo ‚Ä¢ Documenta√ß√£o: http://localhost:5000/docs
    echo ‚Ä¢ Health Check: http://localhost:5000/health
    echo ‚Ä¢ Admin Dashboard: http://localhost:5000/admin/admin_dashboard.html
)
if %IP_OK%==1 (
    echo ‚Ä¢ Documenta√ß√£o: http://%REAL_IP%:5000/docs
    echo ‚Ä¢ Health Check: http://%REAL_IP%:5000/health
    echo ‚Ä¢ Admin Dashboard: http://%REAL_IP%:5000/admin/admin_dashboard.html
)

echo.
echo üîß PR√ìXIMOS PASSOS:
echo ==========================================
if %LOCAL_OK%==1 (
    echo ‚úÖ Sistema OK! Pode prosseguir com integra√ß√£o Copilot M365
) else (
    echo ‚ùå Resolver problemas de conectividade primeiro
    echo üí° Execute: resolver_acesso.bat
)

echo.
pause

